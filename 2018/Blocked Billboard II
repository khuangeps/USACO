// http://www.usaco.org/index.php?page=viewproblem2&cpid=783
package billboard;

import java.util.*;
import java.io.*;

public class billboard {
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(new File("billboard.in"));
		int[] bad = new int[8];
		for (int i = 0; i < 4; i++) { bad[i] = Integer.parseInt(in.next()); }
		
		// top-left corner = (x1, y2)
		// top-right corner = (x2, y1)
		
		int[] good = new int[8];
		for (int i = 0; i < 4; i++) { good[i] = Integer.parseInt(in.next()); }
		
		good[4] = good[0];
		bad[4] = bad[0];
		good[5] = good[3];
		bad[5] = bad[3];
		good[6] = good[2];
		bad[6] = bad[2];
		good[7] = good[1];
		bad[7] = bad[1];
		
		in.close();
		
		
		int covered = 0; // count how many corners are covered
		
		for (int i = 0; i < 8; i += 2) {
			if (covered(bad[i], bad[i + 1], good[0], good[1], good[2], good[3])) {
				covered++;
			}
		}
		
		
		// 3 or 4 corners covered -> tarp = none needed
		int result = 0;
		
		if (covered <= 1) { // <= 1 corner covered -> tarp = full billboard
			result = (bad[2] - bad[0]) * (bad[3] - bad[1]);
		} else if (covered == 2) {
			int xl = Math.max(bad[0], good[0]);
			int xr = Math.min(bad[2], good[2]);
			int yb = Math.max(bad[1], good[1]);
			int yt = Math.min(bad[3], good[3]);
			
			int overlap = Math.abs((xl - xr) * (yt - yb));
			result = (bad[2] - bad[0]) * (bad[3] - bad[1]) - overlap;
		}
		
		
		PrintWriter out = new PrintWriter(new File("billboard.out"));
		out.println(result);
		System.out.println(result);
		out.close();
	}
	
	public static boolean covered(int x, int y, int minx, int miny,
			int maxx, int maxy) {
		if (x >= minx && x <= maxx && y >= miny && y <= maxy) {
			return true;
		} else {
			return false;
		}
	}
}
